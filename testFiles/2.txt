hashMap的底层结构1.7和1.8不一样，1.7 数组加单链表 1.8，数组加链表/红黑树，
hash桶的数量默认是16个，阈值默认是0.75，
扩容，首先会检测hash桶数量 * 负载因子0.75 = 12当它hash桶占有的容量大于12时它就会触发扩容，
扩容为之前的2倍，会把之前的元素都重新进行一次hash运算，填充到新的链表中
在put操作的时候多线程会有数据覆盖的可能，1.7在put时候还有一个resize的过程，这个过程会造成它的头插，会形成一个环形链表导致一直死循环
1.8改为尾插法，


concurrentHashMap，1.7版本底层是一个分片数组，为了保证线程安全有一个segment锁（集成于ReentrantLock）
1.8，改成了和hashMap一样的数据结构，数组加单链表+红黑树，放弃segment分段锁机制，而使用的是synchronized和CAS来操作


1.6时jvm对synchronized的优化非常大

CAS相当于一个轻量级的加锁过程，优点是轻量级